function Board.new 0
push constant 1
call Memory.alloc 1
pop pointer 0
push constant 9
call Array.new 1
pop static 0
push constant 9
call Array.new 1
pop static 1
push constant 0
push static 0
add
push constant 180
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 0
add
push constant 244
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push static 0
add
push constant 308
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push static 0
add
push constant 180
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push static 0
add
push constant 244
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push static 0
add
push constant 308
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push static 0
add
push constant 180
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push static 0
add
push constant 244
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 8
push static 0
add
push constant 308
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push static 1
add
push constant 52
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 1
add
push constant 52
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push static 1
add
push constant 52
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push static 1
add
push constant 116
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push static 1
add
push constant 116
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push static 1
add
push constant 116
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push static 1
add
push constant 180
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push static 1
add
push constant 180
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 8
push static 1
add
push constant 180
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 9
call Array.new 1
pop this 0
push pointer 0
call Board.gameBoard 1
pop temp 0
push pointer 0
return
function Board.selectSquare 2
push argument 0
pop pointer 0
push constant 4
pop local 0
push pointer 0
push local 0
call Board.drawSquare 2
pop temp 0
label WHILE_EXP0
push constant 0
not
not
if-goto WHILE_END0
call Keyboard.keyPressed 0
pop local 1
push local 1
push constant 132
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push local 0
call Board.clearSquare 2
pop temp 0
push pointer 0
push local 0
push constant 1
add
call Board.updateSquare 2
pop local 0
push pointer 0
push local 0
call Board.drawSquare 2
pop temp 0
label IF_FALSE0
push local 1
push constant 130
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push local 0
call Board.clearSquare 2
pop temp 0
push pointer 0
push local 0
push constant 1
sub
call Board.updateSquare 2
pop local 0
push pointer 0
push local 0
call Board.drawSquare 2
pop temp 0
label IF_FALSE1
push local 1
push constant 131
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push local 0
call Board.clearSquare 2
pop temp 0
push pointer 0
push local 0
push constant 3
sub
call Board.updateSquare 2
pop local 0
push pointer 0
push local 0
call Board.drawSquare 2
pop temp 0
label IF_FALSE2
push local 1
push constant 133
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
push local 0
call Board.clearSquare 2
pop temp 0
push pointer 0
push local 0
push constant 3
add
call Board.updateSquare 2
pop local 0
push pointer 0
push local 0
call Board.drawSquare 2
pop temp 0
label IF_FALSE3
push local 1
push constant 128
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push pointer 0
push local 0
call Board.clearSquare 2
pop temp 0
push pointer 0
push local 0
call Board.checkAvailable 2
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push pointer 0
push local 0
push argument 1
call Board.xOr0 3
pop temp 0
push local 0
return
goto IF_END5
label IF_FALSE5
push pointer 0
push local 0
call Board.drawSquare 2
pop temp 0
label IF_END5
label IF_FALSE4
goto WHILE_EXP0
label WHILE_END0
push constant 4
return
function Board.checkAvailable 0
push argument 0
pop pointer 0
push argument 1
push this 0
add
pop pointer 1
push that 0
push constant 1
neg
eq
not
push argument 1
push this 0
add
pop pointer 1
push that 0
push constant 1
eq
not
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
goto IF_END0
label IF_FALSE0
push constant 0
return
label IF_END0
function Board.xOr0 0
push argument 0
pop pointer 0
push argument 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END0
label IF_FALSE0
push argument 1
push this 0
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END0
push pointer 0
push argument 1
push argument 2
call Board.drawxOr0 3
pop temp 0
push constant 0
return
function Board.gameBoard 0
push argument 0
pop pointer 0
push constant 222
push constant 10
push constant 222
push constant 222
call Screen.drawLine 4
pop temp 0
push constant 266
push constant 10
push constant 266
push constant 222
call Screen.drawLine 4
pop temp 0
push constant 138
push constant 80
push constant 330
push constant 80
call Screen.drawLine 4
pop temp 0
push constant 138
push constant 138
push constant 330
push constant 138
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Board.drawO 0
push argument 0
pop pointer 0
push argument 1
push argument 2
push constant 15
call Screen.drawCircle 3
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push constant 0
return
function Board.drawX 0
push argument 0
pop pointer 0
push argument 1
push constant 10
sub
push argument 2
push constant 10
add
push argument 1
push constant 10
add
push argument 2
push constant 10
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 10
add
push argument 2
push constant 10
add
push argument 1
push constant 10
sub
push argument 2
push constant 10
sub
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Board.clearSquare 0
push argument 0
pop pointer 0
push pointer 0
push argument 1
call Board.updateSquare 2
pop argument 1
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
push argument 1
call Board.drawSquare 2
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 0
return
function Board.drawSquare 2
push argument 0
pop pointer 0
push pointer 0
push argument 1
call Board.updateSquare 2
pop argument 1
push argument 1
push static 0
add
pop pointer 1
push that 0
pop local 0
push argument 1
push static 1
add
pop pointer 1
push that 0
pop local 1
push local 0
push constant 16
sub
push local 1
push constant 16
add
push local 0
push constant 16
sub
push local 1
push constant 16
sub
call Screen.drawLine 4
pop temp 0
push local 0
push constant 16
sub
push local 1
push constant 16
add
push local 0
push constant 16
add
push local 1
push constant 16
add
call Screen.drawLine 4
pop temp 0
push local 0
push constant 16
add
push local 1
push constant 16
add
push local 0
push constant 16
add
push local 1
push constant 16
sub
call Screen.drawLine 4
pop temp 0
push local 0
push constant 16
add
push local 1
push constant 16
sub
push local 0
push constant 16
sub
push local 1
push constant 16
sub
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Board.drawxOr0 2
push argument 0
pop pointer 0
push pointer 0
push argument 1
call Board.updateSquare 2
pop argument 1
push argument 1
push static 0
add
pop pointer 1
push that 0
pop local 0
push argument 1
push static 1
add
pop pointer 1
push that 0
pop local 1
push argument 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push local 0
push local 1
call Board.drawO 3
pop temp 0
goto IF_END0
label IF_FALSE0
push pointer 0
push local 0
push local 1
call Board.drawX 3
pop temp 0
label IF_END0
push constant 0
return
function Board.updateSquare 0
push argument 0
pop pointer 0
push argument 1
push constant 1
neg
gt
push argument 1
push constant 9
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
return
label IF_FALSE0
push argument 1
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push argument 1
push constant 8
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 8
return
label IF_FALSE2
push constant 0
return
function Board.checkWinner 0
push argument 0
pop pointer 0
push pointer 0
push constant 0
push this 0
add
pop pointer 1
push that 0
push constant 1
push this 0
add
pop pointer 1
push that 0
push constant 2
push this 0
add
pop pointer 1
push that 0
call Board.win 4
push pointer 0
push constant 3
push this 0
add
pop pointer 1
push that 0
push constant 4
push this 0
add
pop pointer 1
push that 0
push constant 5
push this 0
add
pop pointer 1
push that 0
call Board.win 4
or
push pointer 0
push constant 6
push this 0
add
pop pointer 1
push that 0
push constant 7
push this 0
add
pop pointer 1
push that 0
push constant 8
push this 0
add
pop pointer 1
push that 0
call Board.win 4
or
push pointer 0
push constant 0
push this 0
add
pop pointer 1
push that 0
push constant 3
push this 0
add
pop pointer 1
push that 0
push constant 6
push this 0
add
pop pointer 1
push that 0
call Board.win 4
or
push pointer 0
push constant 1
push this 0
add
pop pointer 1
push that 0
push constant 4
push this 0
add
pop pointer 1
push that 0
push constant 7
push this 0
add
pop pointer 1
push that 0
call Board.win 4
or
push pointer 0
push constant 2
push this 0
add
pop pointer 1
push that 0
push constant 5
push this 0
add
pop pointer 1
push that 0
push constant 8
push this 0
add
pop pointer 1
push that 0
call Board.win 4
or
push pointer 0
push constant 0
push this 0
add
pop pointer 1
push that 0
push constant 4
push this 0
add
pop pointer 1
push that 0
push constant 8
push this 0
add
pop pointer 1
push that 0
call Board.win 4
or
push pointer 0
push constant 2
push this 0
add
pop pointer 1
push that 0
push constant 4
push this 0
add
pop pointer 1
push that 0
push constant 6
push this 0
add
pop pointer 1
push that 0
call Board.win 4
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Board.win 0
push argument 0
pop pointer 0
push argument 1
push constant 0
eq
push argument 2
push constant 0
eq
or
push argument 3
push constant 0
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 1
push argument 2
eq
push argument 2
push argument 3
eq
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
call Output.println 0
pop temp 0
push constant 8
call String.new 1
push constant 89
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 87
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 33
call String.appendChar 2
call Output.printString 1
pop temp 0
push constant 0
not
return
label IF_FALSE1
push constant 0
return
